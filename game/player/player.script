local data = require "main.data"

local DRAG = 0.1
local ACCEL = 0.2
local SPEED_MAX = 2

function init(self)
	self.move = vmath.vector3()
	self.dir = vmath.vector3()
	msg.post(".", "acquire_input_focus")
end

local function quit2menu(self)
	if data.level > data.maxlevel then data.maxlevel = data.level end
	msg.post("main:/sound", "stop_sound")
	msg.post("main:/handler", "show_menu")
end

local function move(self)
	local pos = go.get_position() + self.move
	go.set_position(pos)
	data.playerpos = pos
end

local function drag(self)
	if self.move.x > 0 then self.move.x = self.move.x - DRAG
		if self.move.x < 0 then self.move.x = 0 end
	elseif self.move.x < 0 then self.move.x = self.move.x + DRAG
		if self.move.x > 0 then self.move.x = 0 end
	end
end

local function edge(self)
	if self.move.x > 0 then
		local pos = go.get_position()
		pos.x = pos.x + 8
		pos.y = pos.y - 9
		pos = data.world2tile(pos)
		local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
		if t == 0 then self.move = vmath.vector3() end
	elseif self.move.x < 0 then
		local pos = go.get_position()
		pos.x = pos.x - 8
		pos.y = pos.y - 9
		pos = data.world2tile(pos)
		local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
		if t == 0 then self.move = vmath.vector3() end
	end
end

local function anim(self)
	if self.move.x ~= 0 and self.dir.x ~= self.anim.x then
		if self.dir.x == -1 then
			msg.post("#sprite", "play_animation", {id = hash("run")})
			sprite.set_hflip("#sprite", true)
			self.anim.x = -1
		else
			msg.post("#sprite", "play_animation", {id = hash("run")})
			sprite.set_hflip("#sprite", false)
			self.anim.x = 1
		end
	elseif self.move.x == 0 then
		if self.dir.x == -1 then
			msg.post("#sprite", "play_animation", {id = hash("static")})
			sprite.set_hflip("#sprite", true)
			self.anim = vmath.vector3(0,0,0)
		else
			msg.post("#sprite", "play_animation", {id = hash("static")})
			sprite.set_hflip("#sprite", false)
			self.anim = vmath.vector3(0,0,0)
		end
	end
end

function update(self, dt)
	if data.state == data.STATE_PLAYING then
		edge(self)
		move(self)
		drag(self)
		anim(self)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("position") then
		go.set_position(message.pos)
	end
end

local function input_playing(self, action_id, action)
	if action_id == hash("down") then

	elseif action_id == hash("up") then

	elseif action_id == hash("left") then
		self.move.x = self.move.x - ACCEL
		if self.move.x < -SPEED_MAX then self.move.x = -SPEED_MAX end
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.move.x = self.move.x + ACCEL
		if self.move.x > SPEED_MAX then self.move.x = SPEED_MAX end
		self.dir.x = 1
	elseif action_id == hash("action") and action.pressed then
		-- action code
	elseif action_id == hash("exit") and action.pressed then
		msg.post("main:/sound", "stop_sound")
		msg.post("main:/handler", "show_menu")
	elseif action_id == hash("reload") and action.pressed then
		msg.post("game:/loader", "reload_level")
	end
end

local function input_levelclear(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		data.level = data.level + 1
		if data.level > data.MAX_LEVELS then
			data.maxlevel = 1
			data.level = 1
			quit2menu(self)
		else
			msg.post("game:/loader", "new_level")
		end
	end
end

local function input_gameover(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		quit2menu(self)
	end
end

local function input_getready(self, action_id, action)
	if action_id == hash("action") and action.pressed then
		msg.post("view#getready", "hide")
		data.state = data.STATE_PLAYING
	end
end

function on_input(self, action_id, action)
	if data.state == data.STATE_PLAYING then
		input_playing(self, action_id, action)
	elseif data.state == data.STATE_LEVELCLEAR then
		input_levelclear(self, action_id, action)
	elseif data.state == data.STATE_GAMEOVER then
		input_gameover(self, action_id, action)
	elseif data.state == data.STATE_GETREADY then
		input_getready(self, action_id, action)
	end
end
